import streamlit as st
import pandas as pd
from modules.feature_extractor import prepare_input_features
from modules.predict import get_ensemble_prediction, success_category, percentile_rank


st.set_page_config(page_title="Course Success Predictor", layout="wide")
st.title("üéØ Course Success Score Predictor")


langs = ['en_US', 'en_GB', 'en_IN', 'ar_AR', 'ro_RO', 'zh_CN', 'tr_TR',
       'pt_BR', 'pl_PL', 'fr_CA', 'es_LA', 'ko_KR', 'zh_TW', 'es_ES',
       'sq_AL', 'hi_IN', 'th_TH', 'ja_JP', 'fr_FR', 'es_MX', 'es_CO',
       'ru_RU', 'de_DE', 'id_ID', 'ur_PK', 'pt_PT', 'it_IT', 'vi_VN',
       'az_AZ', 'fa_IR', 'te_IN', 'ml_IN', 'es_CL', 'cs_CZ', 'hu_HU',
       'es_VE', 'el_GR', 'ms_MY', 'uk_UA', 'he_IL', 'sw_KE', 'ta_IN',
       'zh_HK', 'bn_IN', 'nl_NL', 'ka_GE', 'my_MM']


st.subheader("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ –∫—É—Ä—Å–µ")

text_inputs = {
    'description': [
        st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞"),
        st.text_input("–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞")
    ],
    'instructors' : [i.strip() for i in st.text_input(f"–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –∫—É—Ä—Å–∞ (–æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω–æ–µ –∑–∞–ø—è—Ç–æ–π)").strip(',').split(',')]
}

categorical_inputs = {
    'locale': st.selectbox("–Ø–∑—ã–∫ –∫—É—Ä—Å–∞ (locale)", langs),
    'caption_locales': st.multiselect("–Ø–∑—ã–∫–∏ —Å—É–±—Ç–∏—Ç—Ä–æ–≤", options=langs, default=['en_US']),
    'is_paid': st.selectbox("–ü–ª–∞—Ç–Ω—ã–π –∫—É—Ä—Å?", [True, False]),
    'has_closed_caption': st.selectbox("–ï—Å—Ç—å —Å—É–±—Ç–∏—Ç—Ä—ã?", [True, False]),
    'instructional_level_simple': st.selectbox("–£—Ä–æ–≤–µ–Ω—å –∫—É—Ä—Å–∞", ['All Levels', 'Beginner', 'Intermediate', 'Expert'])
}

numeric_inputs = {
    'num_published_lectures': st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ–∫—Ü–∏–π", 0, 500, 10),
    'num_published_practice_tests': st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤", 0, 100, 5),
    'content_length_practice_test_questions': st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ —Ç–µ—Å—Ç–∞—Ö", 0, 1000, 100),
    'content_hours': st.number_input("–ß–∞—Å—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞", 0.0, 100.0, 5.0),
}


if st.button("–ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å —É—Å–ø–µ—Ö"):    
    input_df = pd.DataFrame([numeric_inputs | categorical_inputs | text_inputs])
    features = prepare_input_features(input_df)
    
    prediction = get_ensemble_prediction(features)
    category = success_category(prediction)
    rank_percent = percentile_rank(prediction)
    
    st.success(f"‚ú® –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π —É—Å–ø–µ—Ö –∫—É—Ä—Å–∞: {prediction:.2f}")
    st.success(f"‚ú® –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏: {category}")
    st.success(f"üèÖ –ö—É—Ä—Å –≤—Ö–æ–¥–∏—Ç –≤ **—Ç–æ–ø-{100 - rank_percent:.1f}%** –ª—É—á—à–∏—Ö –∫—É—Ä—Å–æ–≤ –ø–æ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏.")
    